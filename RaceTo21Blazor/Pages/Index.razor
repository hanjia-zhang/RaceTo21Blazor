@page "/"


@if (page == Page.Welcome)
{
    <h1>Welcome To Race-To-21</h1>


    <div class="numberOfPlayer">
        <div class="message">
            <label for="number-input">How many players?</label>
        </div>
        <div class="input">
            <input type="number" id="number-input" name="number-input" value="0" @onchange="NumberofPlayer" />
        </div>
        <div class="BUTTON" @onclick="() => PageChange(Page.UserInfo)">
            <button>NEXT</button>
        </div>
    </div>
}
else if (page == Page.UserInfo)
{
    <h1>Please Enter Name</h1>

    @for (int i = 1; i <= playerNumber; i++)
    {
        <div class="row mt-2" id="PlayerInput">
            <div class="col-sm-6" id="Describtion">
                Player @i Name:
            </div>
            <div class="col-sm-6" id="Input">
                <input type="text" placeholder="Name" @onchange="NewPlayer" />
            </div>
        </div>
    }
    <div class="BUTTON" @onclick="() => PageChange(Page.MainGame)">
        <button>NEXT</button>
    </div>
}

else if (page == Page.MainGame)
{
    @if (!RoundEnd)
    {
        <div class="PlayerChoose">
            <div class="playerTurn">
                @PrintPlayer(CurrentPlayerIndex)
            </div>
            <div class="BUTTON" @onclick="() => StayClick(false)">
                <button>STAY</button>
            </div>

            <div class="col-sm-6 btn-group" role="group">
                @for (int buttonNumber = 1; buttonNumber < 4; buttonNumber++)
                {
                    int btnNum = buttonNumber;
                    <button type="button" class="btn btn-secondary"
                            @onclick="() => ButtonClick(btnNum)">
                        @buttonNumber
                    </button>
                }
            </div>

        </div>
    }
    else
    {
        <div class="winner">@winner wins! </div>
        <div class="BUTTON" @onclick="() => ToContinuePage()">
            <button>NEXT</button>
        </div>

    }
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    @for (int i = 0; i < playerNumber; i++)
                    {

                        <th>@PrintPlayerName(i)</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    @for (int i = 0; i < playerNumber; i++)
                    {
                        <td>@GetPlayerStatus(i)</td>
                    }
                </tr>
                <tr>
                    @for (int i = 0; i < playerNumber; i++)
                    {
                        <td>@PlayerScore(i)</td>
                    }
                </tr>
                <tr>
                    @for (int i = 0; i < playerNumber; i++)
                    {

                        @if (CardsToDisplay(i) != null)
                        {
                            <td>
                                @foreach (String card in CardsToDisplay(i))
                                {
                                    <div>
                                        <img src="card_assets/@card" />
                                    </div>
                                }

                            </td>
                        }
                        else
                        {
                            <td>null</td>
                        }
                    }
                </tr>

            </tbody>
        </table>
    </div>




}
else if (page == Page.ContinueCheck)
{
    @for (int i = 0; i < playerNumber; i++)
    {
        int index = i;
        <div class="askingbar">
            <div class="endask">Do you want to play again Y/N, @PrintPlayerName(i)</div>
            <div class="endOptions">
                <button class="BUTTON" @onclick="() => ContinueCheck(index, true)">Yes</button>
                <button class="BUTTON" @onclick="() => ContinueCheck(index, false)">No</button>
            </div>
        </div>

    }
    <div class="BUTTON" @onclick="() => EndCheck()">
        <button>NEXT</button>
    </div>
}

else if (page == Page.EndScene)
{
    <div class="endgame">Game end</div>
}


@code{


    private enum Page
    {
        Welcome,
        UserInfo,
        MainGame,
        ContinueCheck,
        EndScene
    }

    private Page page = Page.Welcome;
    //public Game game = new Game(c);
    private int playerNumber = 0;
    public static CardTable cardTable = new CardTable();
    public Game game = new Game(cardTable);
    private string playerInfo = null;
    private string playerFullName = null;
    private int chooseCards = 0;
    private int CurrentPlayerIndex = 0;
    private bool firstClick = true;
    private bool RoundEnd = false;
    private string winner = null;
    private List<bool> playerContinueCheck = new List<bool>();

    private void NumberofPlayer(ChangeEventArgs e)
    {

        playerNumber = int.Parse(e.Value.ToString());
    }

    private ValueTask PageChange(Page e)
    {
        page = e;
        return ValueTask.CompletedTask;
    }

    private void NewPlayer(ChangeEventArgs e)
    {
        game.AddPlayer(e.Value.ToString());
    }

    private string PrintPlayer(int i)
    {
        string playerName = game.PrintPlayer(i);
        playerInfo = playerName + ", your turn.";

        return playerInfo;
    }

    private string PrintPlayerName(int i)
    {
        string playerName = game.PrintPlayer(i);
        return playerName;
    }

    private void ButtonClick(int numberOfCard)
    {
        chooseCards = numberOfCard;
        PlayerTurn(CurrentPlayerIndex, chooseCards);
        winner = CheckForEnd();
        if (winner == null)
        {
            NextPlayer();
        }
        else
        {
            RoundEnd = true;
        }

    }
    private void StayClick(bool stayNot)
    {
        Stay(CurrentPlayerIndex);
        winner = CheckForEnd();
        if (winner == null)
        {
            NextPlayer();
        }
        else
        {
            RoundEnd = true;
        }
    }

    private void PlayerTurn(int playerIndex, int cardNumber)
    {
        game.PlayTurn(playerIndex, cardNumber);

    }

    private void Stay(int playerIndex)
    {
        game.PlayerStay(playerIndex);
    }

    private List<string> CardsToDisplay(int playerIndex)
    {
        return game.ShowPlayerCards(playerIndex);
    }

    private string GetPlayerStatus(int playerIndex)
    {
        PlayerStatus status = game.GetPlayerStatus(playerIndex);
        if (status == PlayerStatus.active)
        {
            return "Active";
        }
        else if (status == PlayerStatus.stay)
        {
            return "Stay";
        }
        else if (status == PlayerStatus.bust)
        {
            return "Bust";
        }
        else
        {
            return "Win";
        }
    }

    private void NextPlayer()
    {
        if (CurrentPlayerIndex < playerNumber - 1)
        {
            CurrentPlayerIndex++;
        }

        else
        {
            CurrentPlayerIndex = 0;
        }
    }

    private string PlayerScore(int i)
    {
        return game.ShowPlayerScore(i) + "/21";
    }

    private string CheckForEnd()
    {
        return game.checkForEnd();
    }

    private void ToContinuePage()
    {
        page = Page.ContinueCheck;
        for (int i = 0; i < playerNumber; i++)
        {
            playerContinueCheck.Add(true);
        }
    }

    private void ContinueCheck(int playerIndex, bool c)
    {
        playerContinueCheck[playerIndex] = c;
    }

    private void EndCheck()
    {
        int notContinueNumber = 0;
        for (int i = 0; i < playerNumber; i++)
        {
            game.PlayerContinue(i, playerContinueCheck[i]);
            if (playerContinueCheck[i] == false)
            {
                notContinueNumber++;
            }
        }
        bool check = game.CheckGameContinue();
        if (check)
        {
            chooseCards = 0;
            CurrentPlayerIndex = 0;
            firstClick = true;
            RoundEnd = false;
            winner = null;
            playerContinueCheck = new List<bool>();
            playerNumber -= notContinueNumber;
            page = Page.MainGame;
        }
        else
        {
            page = Page.EndScene;
        }
    }
}